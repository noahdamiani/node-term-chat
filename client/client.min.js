const io=require("socket.io-client"),readline=require("readline"),chalk=require("chalk"),argv=require("minimist")(process.argv.slice(2));readline.emitKeypressEvents(process.stdin),process.stdin.setRawMode(!0);class Client{constructor(){this.chat=io.connect(argv.server),this.user="Anonymous",this.rl=readline.createInterface({input:process.stdin,output:process.stdout}),this.chat.on("connect",()=>this.init()),this.chat.on("chat message",a=>{if(1<a.split(": ").length){let b=a.split(": "),c=b[0],d=b[1];console.log(`${chalk.bgWhite(chalk.bold(chalk.gray(` ${c} `)))}: ${chalk.blue(d)}`)}else console.log(`${chalk.bgYellow(chalk.bold(chalk.gray(` ${a} `)))}`);this.message()})}init(){this.setUser(a=>{console.log(a),a?a:this.user,this.chat.emit("chat message",`${a} joined.`),this.rl.clearLine(),process.stdout.cursorTo(0)})}setUser(a){argv.username?(this.user=argv.username,a(argv.username),this.message()):this.rl.question("username?  ",b=>{this.user=b,a(b),this.message()})}message(){this.rl.question(">> ",a=>{this.chat.emit("chat message",`${this.user}: ${a}`)})}}new Client;